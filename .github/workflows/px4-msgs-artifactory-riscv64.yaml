name: Push px4_msgs to Riscv64 Artifactory Debian Repo

on:
  push:
    branches: [ riscv64_support ]
  workflow_dispatch:

jobs:
  tii-deb-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros2_distro: [galactic]
    steps:
      - name: Checkout drone-yocto repo
        uses: actions/checkout@v3
        with:
          repository: tiiuae/drone-yocto
          ref: fog_hyper_supports
          submodules: recursive
          ssh-key: ${{ secrets.ACCESS_REPO_TOKEN }}
          path: drone-yocto

      - name: Checkout px4_msgs repo
        uses: actions/checkout@v3
        with:
          path: px4_msgs

      - name: Modify px4_msgs recipe in drone-yocto
        run: |
          set -eux
          pushd px4_msgs > /dev/null
          # Get current px4_msgs version
          VERSION=$(grep '<version>' package.xml | sed 's/<\/\?version>//g' | awk '{$1=$1};1')
          popd > /dev/null

          pushd drone-yocto > /dev/null
          # Create a recipe for px4_msgs version X
          mkdir meta-ssrc-ros2/recipes-support/px4-msgs/tmp
          mv meta-ssrc-ros2/recipes-support/px4-msgs/px4-msgs_*-git.bb meta-ssrc-ros2/recipes-support/px4-msgs/tmp/px4-msgs_$VERSION-git.bb
          mv meta-ssrc-ros2/recipes-support/px4-msgs/tmp/px4-msgs_*-git.bb meta-ssrc-ros2/recipes-support/px4-msgs/
          rm -rf meta-ssrc-ros2/recipes-support/px4-msgs/tmp
          # Fix src branch
          sed -i "s/=main/=${GITHUB_REF##*/}/g" meta-ssrc-ros2/recipes-support/px4-msgs/px4-msgs_*-git.bb
          # Fix SRCREV
          sed -i "s/SRCREV.*/SRCREV = \"$GITHUB_SHA\"/" meta-ssrc-ros2/recipes-support/px4-msgs/px4-msgs_*-git.bb
          cat meta-ssrc-ros2/recipes-support/px4-msgs/px4-msgs_*-git.bb
          popd > /dev/null

      - name: Run yocto distro build
        run: |
          pushd drone-yocto > /dev/null
          apt install -y chrpath diffstat
          TEMPLATECONF=meta-ssrc-ros2/conf/saluki-template source oe-init-build-env build-riscv
          cd .. # or cd to main dir
          DISTRO=drone bitbake fog-px4-msgs-deb-package-build-image
          popd > /dev/null

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: px4_msgs_riscv64
          path: drone-yocto/build-riscv/tmp-glibc/deploy/deb/riscv64/px4-msgs*.deb
          retention-days: 1

  artifactory:
    runs-on: ubuntu-latest
    needs: tii-deb-build
    if: github.event_name == 'push'
    steps:
      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          name: px4_msgs_riscv64
          path: bin/build_output
      - uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.ARTIFACTORY_TOKEN }}
      - name: Upload to Artifactory
        env:
          ARTIFACTORY_REPO: ssrc-deb-public-local
          DISTRIBUTION: custom
          COMPONENT: saluki
          ARCHITECTURE: riscv64
          BUILD_NAME: px4_msgs-riscv64
          CI: true
        run: |
          set -exu
          jfrog rt ping
          cd bin/build_output
          for pkg in *.deb
          do
            jfrog rt u --deb "$DISTRIBUTION/$COMPONENT/$ARCHITECTURE" \
                       --target-props COMMIT="$GITHUB_SHA" \
                       --build-name "$BUILD_NAME" \
                       --build-number "$GITHUB_SHA" \
                       "$pkg" \
                       "$ARTIFACTORY_REPO/riscv64/riscv64/$pkg"
          done
